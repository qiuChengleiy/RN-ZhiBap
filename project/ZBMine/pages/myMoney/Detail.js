/**
 * Created by yangu on 2018/8/4.
 * generated by qiuchenglei on 2018/8/10
 * 个人中心------ 全部明细
 */
import React, {Component} from 'react';
import {
    Platform,
    StyleSheet,   
    Text, 
    View, 
    Image,
    Alert,
    TouchableHighlight,
    Button,
    ScrollView,
} from 'react-native';

// 适配X
import { isIphoneX, ifIphoneX } from '../../../utils';

const Dimensions = require('Dimensions');
const {width,height} = Dimensions.get('window');

 //  全部明细
export class DetailVC extends Component{

    constructor(props) {
        super(props);

        // 组件全局状态 当API改变时 自动变更
        this.state = {   
           isOpen: false,
           Money: ['99.00','11.00','8.88','99.00','11.00','8.88','99.00',],  // 金额
           status: ['提现成功','分享成功','提现成功','分享成功','提现成功','分享成功','分享成功',],
           date: ['2017年4月8日','2017年4月8日','2017年4月8日','2017年4月8日','2017年4月8日','2017年4月8日','2017年4月8日'],
           aim: ['通过QQ分享获得','提现去向：1870999090','通过QQ分享获得','通过QQ分享获得','通过QQ分享获得','通过QQ分享获得','通过QQ分享获得',],
        }
    }

    back(option) {
        if(option == '返回') {
            this.props.navigation.goBack()
        }
    }

    Menu(item) {
        this.setState({isOpen:false});
    }

    // 渲染数据列表
    renderList() {
        const data = this.state.status;
        const date = this.state.date;
        const aim = this.state.aim;
        const Money = this.state.Money;

        return data.map( (val,key) =>
                <View style={[styles.scrollBox, this.state.isOpen ? {} : {backgroundColor: '#ffffff'},]}>
                    <View style={styles.s_top}>
                      {/* 顶部文案 */}
                        <Text style={styles.top_txt1}>{val}</Text>
                        <Text style={styles.top_txt2}>{date[key]}</Text>
                    </View>
                      {/* 底部文案 */}
                    <View style={styles.s_bot}>
                        <Text style={styles.bot_txt1}>{aim[key]}</Text>
                        <Text style={styles.bot_txt2}>-{Money[key]}元</Text>
                    </View>
            
               </View>
        )
    }

    renderMenu() {
        return ['全部','支出','收入'].map((val,key) => 
                        <TouchableHighlight onPress={() => this.Menu(val)} underlayColor="#ffffff" style={{width: "85%",height:40,justifyContent:'center',alignItems:'center',zIndex:555}} >
                            <View style={[{width: "85%",height:40,justifyContent:'center',alignItems:'center',zIndex:555}, key !== 2 ? {borderBottomWidth:.8,borderBottomColor:'#cccccc'} : '']}>
                                <Text style={{color:'#333333',fontSize:17}}>{val}</Text>
                            </View>
                        </TouchableHighlight>
         )
    }




    componentDidMount() {
        // ....some api here 
    }

    render() {
        return (
            <View style={styles.container}>
             
             {/* 标题 */}
             <View style={styles.title}>

             <View style={{ width:"100%",height:ifIphoneX(90,75),alignItems: 'center',marginTop:10,justifyContent:'center',alignItems:'center'}}>
              <TouchableHighlight onPress={() => this.back('返回')} underlayColor="#ffffff" style={[styles.step_left,{width:30,marginLeft:20,zIndex:111}]}>
                <View style={[styles.step_left,{width:12,}]}>
                   <Image source={{uri:'icon_passback'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                </View>
              </TouchableHighlight>

                <Text style={{fontSize:17,fontWeight:"600",color:"#333333"}}>全部明细</Text>
                {/* 查看明细 */}
                 <TouchableHighlight onPress={() => this.setState({isOpen: !this.state.isOpen,})} underlayColor="#ffffff" style={[styles.step_left,{width:30,marginRight:20,zIndex:111,alignSelf:'flex-end'}]}>
                    <View style={[styles.step_left,{width:14,}]}>
                      <Image source={{uri:'icon_screening'}} style={{width:'100%',height:"100%",resizeMode:'contain',}}/>
                    </View>
                </TouchableHighlight>
    
              </View>
    
                 

             </View>
            
          {/* 模态背景 */}
                {this.state.isOpen? <View style={styles.modalView}></View> : null}
                
              <View style={styles.step}>

               {/* 模态框 按钮 */}
                  {
                     this.state.isOpen ?
                            <View style={styles.menu}>
                                <Image source={{uri:'icon_minessage'}} style={{width:'100%',height:"100%",resizeMode:'contain',zIndex:333}}/>
                                <View style={styles.modalViewStyle}>                      
                                   {this.renderMenu()}
                                </View>
                            </View> 
                            :
                            <View></View>
    
                  }

                   <ScrollView 
                            ref="scrollerView"  
                            style={styles.list}  
                            // 水平滚动  
                            horizontal={false}  
                            // 是否显示水平滚动条  
                            showsHorizontalScrollIndicator={false}  
                            // 垂直滚动条
                            showsVerticalScrollIndicator = {false}
                            // 安页滚动  
                            pagingEnabled={true}  
  
                            //滚动动画结束时调用此函数  
                         //   onMomentumScrollEnd={(e)=>this.onAnimationEnd(e)}  
  
                            //开始拖拽  
                         //   onScrollBeginDrag={(e)=>this.onScrollerBeginDrag(e)}  
  
                            //停止拖拽  
                         //   onScrollEndDrag={(e)=>this.onScrollEndDrag(e)}  
                          >  
                         {/* 列表数据渲染 */}
                            {this.renderList()}  

                      </ScrollView>  
                  </View>        
            </View>
        );
    }
}




const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        backgroundColor: '#f7f7f7',
    },
    title: { 
        width:"100%",
        height:75,
        marginTop: 0,
        alignItems: 'center',
        position:'absolute',
        zIndex:11,
        backgroundColor: "#ffffff",
        borderBottomWidth: 0.4,
        borderBottomColor: "#cccccc",
    },
    step: {
        width: '94%',
        height: '85%',
        marginTop:75,
        zIndex: 60,
    },
   list: {
        width: "100%",
   },
   scrollBox: {
        width:'100%',
        height:95,
        marginTop:13,
        padding: 10,
        },
    nav: {    
        width:'100%',
        height:25,
        marginTop: 30,
        position: 'absolute',
        zIndex: 11,
    },
    txt: {
        width:'100%',
    },
    nav_icon: {
        width: '15%',
        height:'100%',
        alignSelf: 'flex-start',
    },
    info: {
        width: "95%",
        height: 50,
        backgroundColor: '#ffffff',
    },
    icon_right: {
        width: '5%',
        height: '65%',
        alignSelf: 'flex-end',
        position: 'absolute',
        justifyContent: 'center',
        alignItems:'flex-end'
    },
    step_left: {
        width:"15%",
        height:30,
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'flex-start',
        position:'absolute'
    },
    s_top: {
        width:'100%',
        height:'40%', 
        alignItems:'flex-end',
        flexDirection:'column-reverse'
    },
    s_bot: {
        width:'100%',
        height:'60%',
        alignItems:'flex-end',
        flexDirection:'column-reverse'
    },
    top_txt1: {
        fontSize:18,
        fontWeight:'400',
        color:'#333333',
        alignSelf:'flex-start',
        marginBottom:8,
    },
    top_txt2: {
        fontSize:16,
        color:'#999999',
        alignSelf:'flex-end',
        position:'absolute',
        marginBottom:8,
    },
    bot_txt1: {
        fontSize:15,
        color:'#333333',
        fontWeight:'400',
        alignSelf:'flex-start',
    },
    bot_txt2: {
        fontSize:23,
        color:'#333333',
        fontWeight:'600',
        alignSelf:'flex-end',
        position:'absolute'
    },
    modalView: {
        width:width,
        height:height,
        zIndex: 60,
        position:'absolute',
        backgroundColor: '#000000',
        opacity:.4
    },
    menu: {
        width: 115,
        height:140,
        zIndex:555,
        position:'absolute',
        alignSelf:'flex-end',
        marginTop:-7,
    },
    modalViewStyle: {
        width:'100%',
        height:120,
        position:'absolute',
        zIndex:444,
        marginTop:12,
        alignItems:'center'
    },
    
});
