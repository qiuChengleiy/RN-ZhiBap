/**
 * Created by yangu on 2018/8/4.
 * generated by qiuchenglei on 2018/8/13
 * 银行卡 ------ 填写银行卡信息
 */
import React, {Component} from 'react';
import {
    Platform,
    StyleSheet,   
    Text, 
    View, 
    Image,
    Alert,
    TouchableHighlight,
    KeyboardAvoidingView,
    TextInput,
} from 'react-native';

// 适配X
import { isIphoneX, ifIphoneX,USERNAME, phoneReg } from '../../../utils';

// 隐藏软键盘
const dismissKeyboard = require('dismissKeyboard');

const Dimensions = require('Dimensions');
const {width,height} = Dimensions.get('window');

 //  填写银行卡信息
export class BankCardPhoneVC extends Component{

    constructor(props) {
        super(props);

        this.state = {  
            phone:`${this.props.navigation.state.params.cardObj.phone}`,
            isGet: false, // 用户验证码获取状态
            code: '获取验证码',
            num: null,
            identifyingCode: '', // 验证码
        }
    }

    // 返回
    back(option) {
        if(option == '返回') {
            this.props.navigation.goBack()
        }
    }

    focus(e) {
            this.refs.identifyingCode.focus();
    }

    // 密码管理 验证码
    passWordManager(option) {
        switch(option) {
            case 'identifyingCode':   // 验证码   
            // .... 走后台 发送验证码


            let num = 61;
        // 验证码倒计时 60s后重新获取
            clearInterval(timer);
            const timer = setInterval(() => {
              if(num<1) {
                  clearInterval(timer);
                  this.setState({isGet:false,code:'获取验证码'})
              } else {
                num--;
                this.setState({isGet:true,code: `${num}s后重发`,num})}
              }
            ,1000)

              break;
            default:
              break;
        }
    }

    // next
    next(identifyingCode) {
        dismissKeyboard();
        if(identifyingCode) {
            if(identifyingCode == 2222) {
               // next
               const cardObj = this.props.navigation.state.params.cardObj  // 用户银行卡相关信息
               console.log(cardObj)

               this.props.navigation.navigate('BankCardSuccessVC'); // 成功跳转
            }else {
                Alert.alert('提示','验证码不正确',[{text:'我知道了',
                onPress: this.setState({identifyingCode:''})
              }])
                   
            }

        }else {
            Alert.alert('提示','请输入验证码',[{text:'我知道了',
                onPress: this.refs.identifyingCode.focus()
        }])
        }
    }



    componentDidMount() {
        // ....some api here 
    }

    render() {
        return (
            <View style={styles.container}>
             
             {/* 标题 */}
             <View style={styles.title}>

             <View style={{ width:"100%",height:ifIphoneX(90,75),alignItems: 'center',marginTop:10,justifyContent:'center',alignItems:'center'}}>
              <TouchableHighlight onPress={() => this.back('返回')} underlayColor="#ffffff" style={[styles.step_left,{width:30,marginLeft:20,zIndex:111}]}>
                <View style={[styles.step_left,{width:12,}]}>
                   <Image source={{uri:'icon_passback'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                </View>
              </TouchableHighlight>

                <Text style={{fontSize:15,fontWeight:"400",color:"#333333"}}>验证手机号</Text>

              </View>
    
             </View>
         
          
            {/* 表单 */}
            
              <View style={styles.step}>

                  {/* 短信提示 */}
                <View style={styles.tips}>
                   <Text style={{fontSize:14,color:'#333333',lineHeight:20}}>本次操作需要短信确认，请输入 {this.state.phone}收到的短信验证码</Text>
                </View>

                <View style={styles.form}>

                  {/* 卡号 */}
                <TouchableHighlight onPress={() => this.focus()} underlayColor="#ffffff" style={[styles.inpu_,{ borderBottomWidth:0,}]}>
                    <View style={[styles.inpu_,{ borderBottomWidth:0,}]}>
                        <Text style={{fontSize:16,color:'#333333',fontWeight: 'normal',marginLeft:14}}>验证码</Text>

                  {/* 键盘输入 随视图变化*/}
                     <View style={styles.containers}>
                         <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                            <TextInput
                                underlineColorAndroid={'#ffffff'}
                                placeholder="填写验证码"
                                ref="identifyingCode"
                            // 获得焦点时 需要上移视图
                                value={this.state.identifyingCode}
                            // 失去焦点
                            // 最大长度4位
                                maxLength={4}  
                                style={styles.textInput} 
                                onChangeText={(identifyingCode) => { this.setState({identifyingCode,isText: false});identifyingCode ? '' : dismissKeyboard() }}
                          //  密文形式
                                secureTextEntry={false} 
                                keyboardType='numeric' 
                            />
                        </KeyboardAvoidingView>
                       </View>
                       {/* 获取验证码 */}
                       <View style={[styles.icon_right,this.state.isGet ? {width:'35%'} :{width:'30%'},]}>
                             <TouchableHighlight onPress={() => this.state.isGet ? Alert.alert(`${this.state.num}秒后重试`) : this.passWordManager('identifyingCode')} underlayColor="#ffffff">
                                 <Text style={[{color:'#1e9acb2',fontSize:14,marginTop:4,alignSelf:'flex-end'},this.state.isGet ? {color:'#999999',}:{color:'#d23247'}]}>{this.state.code}</Text>
                            </TouchableHighlight>
                        </View>


                    </View>
                </TouchableHighlight>

                </View>


                {/* next */}
                <TouchableHighlight onPress={() =>  this.state.identifyingCode && this.next(this.state.identifyingCode)} underlayColor={this.state.identifyingCode ? '#D23247' :'#E6E6E6'} style={[styles.btn_,this.state.identifyingCode ? {backgroundColor: '#D23247',} :{}]}>
                    <Text style={[{fontSize:18,fontWeight:'600',color:'#999999'},this.state.identifyingCode ? {color: '#ffffff',} :{}]}>下一步</Text>
                </TouchableHighlight>


                
              </View>
            
            </View>
        );
    }
}



// const Tab=createBottomTabNavigator(
//     {


//     })



const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        backgroundColor: '#f7f7f7',
    },
    containers: {
        width: '70%',
        height: '100%',
        justifyContent: 'center',
        position: 'absolute',
        marginLeft:'10%',
      },
    title: { 
        width:"100%",
        height:75,
        marginTop: 0,
        alignItems: 'center',
        position:'absolute',
        zIndex:11,
        backgroundColor: "#ffffff",
        borderBottomWidth: 0.4,
        borderBottomColor: "#cccccc",
    },
    step: {
        width: '100%',
        height: '85%',
        marginTop:75,
        zIndex: 60,
        justifyContent: 'flex-start',
        alignItems:'center'
    },
    step_left: {
        width:"15%",
        height:30,
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'flex-start',
        position:'absolute'
    },
    tips: {
        width:'60%',
        height:'10%',
        justifyContent: 'center',
        alignItems:'flex-start',
    },
    form: {
        width:'100%',
        height:'8%',
        backgroundColor: '#ffffff',
    },
    inpu_: {
        width:'100%',
        height:'100%',
        justifyContent:'center',
        alignItems:'flex-start',
    },
    inpus_: {
        width:"80%",
        height:'100%',
        justifyContent:'center',
        alignItems:'flex-start',
        position:'absolute',
        left:"22%",
    },
    btn_: {
        width:'90%',
        height: 50,
        backgroundColor: '#E6E6E6',
        justifyContent: 'center',
        alignItems:'center',
        borderRadius: 5,
        marginTop:30,
    },
    textInput: {
        height: '100%',
        fontSize: 15,
        marginLeft: 10,
        letterSpacing: 1,
      },
    icon_right: {
        width: '5%',
        height: '100%',
        justifyContent: 'center',
        alignSelf: 'flex-end',
        position: 'absolute',
        right:14,
    },
   


    
});
