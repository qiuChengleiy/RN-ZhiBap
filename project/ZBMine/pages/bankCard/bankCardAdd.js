/**
 * Created by yangu on 2018/8/4.
 * generated by qiuchenglei on 2018/8/13
 * 银行卡 ------ 银行卡添加界面
 */
import React, {Component} from 'react';
import {
    Platform,
    StyleSheet,   
    Text, 
    View, 
    Image,
    Alert,
    TouchableHighlight,
    KeyboardAvoidingView,
    TextInput,
} from 'react-native';

// 适配X
import { isIphoneX, ifIphoneX,USERNAME,BankCardCheck } from '../../../utils';

// 隐藏软键盘
const dismissKeyboard = require('dismissKeyboard');

const Dimensions = require('Dimensions');
const {width,height} = Dimensions.get('window');

 //  银行卡添加
export class BankCardAddVC extends Component{

    constructor(props) {
        super(props);

        this.state = {  
            username: '',
            bank_number: '',
        }
    }

    // 返回
    back(option) {
        if(option == '返回') {
            this.props.navigation.goBack()
        }
    }

    focus(e) {
        if(e == 'username') {
            this.refs.username.focus();
        }else{
            this.refs.bank_number.focus();
        }
        
    }

    // next
    next(username,bank_number) {
        dismissKeyboard();
        if(username && bank_number ) {
            if(!USERNAME(username)) {
                const username_ = username;
                if(!BankCardCheck(bank_number)) {
                    const bankNumber = bank_number;
                    const cardObj = {username_,bankNumber};

                    // ....api  进入下一步
                    this.props.navigation.navigate('BankCardInfoVC',{cardObj})


                }else {
                    Alert.alert('提示','银行卡号不正确',[{text:'我知道了',
                    onPress: this.setState({bank_number:''})
               }])
                  
                    
                }
            }else {
                Alert.alert('提示','持卡人姓名不正确',[{text:'我知道了',
                onPress: this.setState({username:''})
              }])
                   
            }

        }else {
            Alert.alert('提示','持卡人和卡号不能为空',[{text:'我知道了',
                onPress: this.refs.username.focus()
        }])
        }
    }



    componentDidMount() {
        // ....some api here 
    }

    render() {
        return (
            <View style={styles.container}>
             
             {/* 标题 */}
             <View style={styles.title}>

             <View style={{ width:"100%",height:ifIphoneX(90,75),alignItems: 'center',marginTop:10,justifyContent:'center',alignItems:'center'}}>
              <TouchableHighlight onPress={() => this.back('返回')} underlayColor="#ffffff" style={[styles.step_left,{width:30,marginLeft:20,zIndex:111}]}>
                <View style={[styles.step_left,{width:12,}]}>
                   <Image source={{uri:'icon_passback'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                </View>
              </TouchableHighlight>

                <Text style={{fontSize:17,fontWeight:"600",color:"#333333"}}>添加银行卡</Text>

              </View>
    
             </View>

               
          
        
          
            {/* 表单 */}
            
              <View style={styles.step}>
                <View style={styles.tips}>
                   <Text style={{fontSize:14,color:'#999999'}}>请绑定持卡人本人的银行卡</Text>
                </View>

                <View style={styles.form}>
                {/* 持卡人 */}
                <TouchableHighlight onPress={() => this.focus('username')} underlayColor="#ffffff" style={[styles.inpu_,]}>
                    <View style={[styles.inpu_,{ borderBottomWidth:0,}]}>
                        <Text style={{fontSize:16,fontWeight: 'normal',color:'#333333',marginLeft:14}}>持卡人</Text>

                        <KeyboardAvoidingView behavior="padding" style={styles.inpus_}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="请输入真实姓名"
                                    style={{alignSelf:'flex-start',fontSize:16,}} 
                                    ref="username"
                                    value={this.state.username}
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                                //    onBlur={() =>Reg()}
                                    onChangeText={(username) => { this.setState({username,});username ? '' : dismissKeyboard()}}
                                // 限制只能输入数字
                                  //  keyboardType='numeric'
                                />
                         </KeyboardAvoidingView>

                    </View>
                </TouchableHighlight>

                  {/* 卡号 */}
                <TouchableHighlight onPress={() => this.focus('bank_number')} underlayColor="#ffffff" style={[styles.inpu_,{ borderBottomWidth:0,}]}>
                    <View style={[styles.inpu_,{ borderBottomWidth:0,}]}>
                        <Text style={{fontSize:16,color:'#333333',fontWeight: 'normal',marginLeft:14}}>卡号</Text>

                        <KeyboardAvoidingView behavior="padding" style={styles.inpus_}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="请输入银行卡号"
                                    style={{alignSelf:'flex-start',fontSize:16,}} 
                                    ref="bank_number"
                                    value={this.state.bank_number}
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                                //    onBlur={() =>Reg()}
                                    onChangeText={(bank_number) => { this.setState({bank_number,});bank_number ? '' : dismissKeyboard()}}
                                // 限制只能输入数字
                                    keyboardType='numeric'
                                />
                         </KeyboardAvoidingView>
                    </View>
                </TouchableHighlight>

                </View>


                {/* next */}
                <TouchableHighlight onPress={() => this.state.username && this.state.bank_number && this.next(this.state.username,this.state.bank_number)} underlayColor={this.state.username && this.state.bank_number ? '#D23247' :'#E6E6E6'} style={[styles.btn_,this.state.username && this.state.bank_number ? {backgroundColor: '#D23247',} :{}]}>
                    <Text style={[{fontSize:18,fontWeight:'600',color:'#999999'},this.state.username && this.state.bank_number ? {color: '#ffffff',} :{}]}>下一步</Text>
                </TouchableHighlight>


                
              </View>
            
            </View>
        );
    }
}



// const Tab=createBottomTabNavigator(
//     {


//     })



const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        backgroundColor: '#f7f7f7',
    },
    title: { 
        width:"100%",
        height:75,
        marginTop: 0,
        alignItems: 'center',
        position:'absolute',
        zIndex:11,
        backgroundColor: "#ffffff",
        borderBottomWidth: 0.4,
        borderBottomColor: "#cccccc",
    },
    step: {
        width: '100%',
        height: '85%',
        marginTop:75,
        zIndex: 60,
        justifyContent: 'flex-start',
        alignItems:'center'
    },
    step_left: {
        width:"15%",
        height:30,
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'flex-start',
        position:'absolute'
    },
    tips: {
        width:'90%',
        height:40,
        justifyContent: 'center',
        alignItems:'flex-start',
    },
    form: {
        width:'100%',
        height:'17%',
        backgroundColor: '#ffffff',
    },
    inpu_: {
        width:'100%',
        height:'50%',
        justifyContent:'center',
        alignItems:'flex-start',
        borderBottomWidth:.7,
        borderBottomColor:'#f7f7f7'
    },
    inpus_: {
        width:"80%",
        height:'100%',
        justifyContent:'center',
        alignItems:'flex-start',
        position:'absolute',
        left:"22%",
    },
    btn_: {
        width:'93%',
        height: 55,
        backgroundColor: '#E6E6E6',
        justifyContent: 'center',
        alignItems:'center',
        borderRadius: 5,
        marginTop:20,
    }
   


    
});
