/**
 * Created by yangu on 2018/8/4.
 * generated by qiuchenglei on 2018/8/8
 * 密码找回------ 普通用户 ------ 流程一 ---- 设置新密码
 */
import React, {Component} from 'react';
import {
    Platform,
    StyleSheet, 
    Text, 
    View, 
    Image,
    Alert,
    TouchableHighlight,
    Button,
    KeyboardAvoidingView,
    TextInput,
} from 'react-native';

// 隐藏软键盘
const dismissKeyboard = require('dismissKeyboard');

export class BackPasswordSetVC extends Component{

    constructor(props) {
        super(props);
        this.state = {    
            password:'',
            newPassword: '',
            isPassword: true,
            isPassword2: true,
        }
    }


    //触发焦点
    regOption(option) {
        switch(option) {
            case 'pass1' :
               this.refs.password.focus();
                break;
            case 'pass2' :
                this.refs.newPassword.focus();
                break;
            default:
                break;
        }
        
    }

    // 返回
    back(option) {
        Alert.alert(option);
    }


    // 图标切换
    toggleIcon(cls) {
        // 点击取消按钮时 收起软键盘并清除表单
        switch(cls) {
            case 'isPassword':
                this.setState({
                    isPassword: !this.state.isPassword,
                });
                break;
            case 'isPassword2':
                this.setState({
                    isPassword2: !this.state.isPassword2,
                });
                break;
            default:
              break;
               
        }

        
    }



    // 下一步
    next(password,newPassword) {

        if(password && newPassword ) {
            // some api ...
            // 新密码

            // 这里需验证 确认的密码是否和输入的一样
             if( password === newPassword) {

                Alert.alert('设置成功')

                // 走后台流程 更新密码

                this.props.navigation.navigate('LoginVC');

             }else {
                Alert.alert('密码错误','两次输入的不一样',[{text:'我知道了',
              }])
             }

        }else {
            Alert.alert('空白','请输入信息',[{text:'我知道了',
           }])
        }
    }

    componentDidMount() {
        // ....some api here 
    }

    render() {
        return (
            <View style={styles.container}>
             
             {/* 标题 */}
             <View style={{ width:"100%",height:75,marginTop: 0,alignItems: 'center',borderBottomWidth:1,borderBottomColor:"#E6E6E6",position:'absolute',zIndex:11,backgroundColor: "#ffffff",}}>

             <View style={{ width:"100%",height:75,alignItems: 'center',marginTop:10,justifyContent:'center',alignItems:'center'}}>
              <TouchableHighlight onPress={() => this.props.navigation.goBack()} underlayColor="#ffffff" style={[styles.step_left,{width:30,marginLeft:20,zIndex:111}]}>
                <View style={[styles.step_left,{width:14,}]}>
                   <Image source={{uri:'icon_passback'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                </View>
              </TouchableHighlight>

                <Text style={{fontSize:18,fontWeight:"400",color:"#333333"}}>找回密码</Text>
              </View>

             </View>

                   {/* 步骤条 */}
                   <View style={styles.step}>
                        <View style={styles.stapbox}>

                             <View style={styles.inner}>
                                <View style={styles.steptop}>
                                 {/* 左 */}
                                    <View style={styles.step_left}>
                                         <Image source={{uri:'icon_step1'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                                    </View>

                                    <View style={styles.step_mid}></View>
                                {/* 右边 */}
                                     <View style={styles.step_right}>
                                         <Image source={{uri:'icon_stepg2'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                                    </View>
                                
                                </View>

                                {/* 底部 */}
                                 <View style={styles.bot}>
                                    <Text style={styles.step_text}>验证手机</Text>
                                    <Text style={[styles.step_text,{alignSelf:'flex-end',position:'absolute'}]}>设置密码</Text>
                                 </View>
                        
                            </View>
                    
                        </View>
                    </View>



                {/* 表单 */}
                <View style={styles.form}>

                     {/* 设置新密码 */}
                    <View style={[styles.info,styles.borders]}>

                        <TouchableHighlight onPress={() => this.regOption('pass1')} underlayColor="#ffffff" style={styles.icon_location}>
                        
                        <View style={{width:"100%",height:"100%"}}>
                           <View style={styles.icon_locations}>
                                <Image source={{uri:'icon_lock2'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                           </View>

            
                        {/* 设置新密码 */}
                         <View style={styles.containers}>
                            <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="设置新密码"
                                    style={{alignSelf:'flex-start',fontSize:17,marginLeft:-30,width: '100%'}} 
                                    ref="password"
                                    secureTextEntry={this.state.isPassword}  
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                                //    onBlur={() =>Reg()}
                                    onChangeText={(password) => { this.setState({password,})}}
                                // 限制只能输入数字
                                 //   keyboardType='numeric'
                                />
                             </KeyboardAvoidingView>
                            </View>

                     {/* 图标切换 */}
                        <View style={[styles.icon_right,]}>
                             <TouchableHighlight onPress={() => this.toggleIcon('isPassword')} underlayColor="#ffffff" style={[{width:'100%',zIndex:111,}]}>
                                <Image source={{uri:'icon_2'}} style={{width:'100%',height:"100%",resizeMode:'contain'}} />
                             </TouchableHighlight>
                        </View>


                          </View>
                        </TouchableHighlight>
                    </View>

                 {/* 确认密码 */}
                    <View style={[styles.info,styles.borders]}>

                        <TouchableHighlight onPress={() => this.regOption('pass2')} underlayColor="#ffffff" style={styles.icon_location}>
                        
                        <View style={{width:"100%",height:"100%"}}>
                           <View style={styles.icon_locations}>
                                <Image source={{uri:'icon_lock2'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                           </View>

            
                        {/* 确认密码 */}
                         <View style={styles.containers}>
                            <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="确认新密码"
                                    style={{alignSelf:'flex-start',fontSize:17,marginLeft:-30,width:"100%"}} 
                                    ref="newPassword"
                                    secureTextEntry={this.state.isPassword2}  
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                                //    onBlur={() =>Reg()}
                                onChangeText={(newPassword) => { this.setState({newPassword,})}}
                                // 限制只能输入数字
                                  //  keyboardType='numeric'
                                />
                             </KeyboardAvoidingView>
                        </View>

                    {/* 图标切换 */}
                        <View style={[styles.icon_right,]}>
                             <TouchableHighlight onPress={() => this.toggleIcon('isPassword2')} underlayColor="#ffffff" style={[{width:'100%',zIndex:111,}]}>
                                <Image source={{uri:'icon_3'}} style={{width:'100%',height:"100%",resizeMode:'contain'}} />
                             </TouchableHighlight>
                        </View>

                          </View>
                        </TouchableHighlight>
                    </View>


                 </View>


             {/* next */}
                <View style={styles.btn}>
    
                    <View style={styles.nextBtn}>
                        <TouchableHighlight onPress={() => this.next(this.state.password,this.state.newPassword,)} underlayColor="##d23247" style={{width:'100%',height:'100%',justifyContent: 'center',alignItems: 'center',}}>
                            <Text style={{fontSize:18,fontWeight: '800',color:'#ffffff'}}>完成</Text>
                        </TouchableHighlight>
                    </View>

                
                </View>
            
        
            </View>
        );
    }
}



// const Tab=createBottomTabNavigator(
//     {


//     })



const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        backgroundColor: '#ffffff',
    },
    containers: {
        width: '80%',
        height: '100%',
        justifyContent: 'center',
        alignItems: 'center',
        position: 'absolute',
        marginLeft:'10%',
        alignSelf:"flex-start",
    },
    form: {
        width:"100%",
        height:100,
        backgroundColor:"#ffffff",
        justifyContent:"center",
        alignItems:"center",
        position:'absolute',
        zIndex:111,
        marginTop:240,
    },
    head: {
        width: '15%',
        height: '100%',
        justifyContent: 'center',
        alignItems: 'center',
        position: 'absolute',
        marginLeft:'10%',
        alignSelf: 'flex-end',
    },
    nav: {    
        width:'100%',
        height:25,
        marginTop: 30,
        position: 'absolute',
        zIndex: 11,
    },
    nav_icon: {
        width: '15%',
        height:'100%',
        alignSelf: 'flex-start',
    },
    btn: {
        width: '100%',
        height: '100%',
        backgroundColor: '#f7f7f7',
        justifyContent: 'flex-end',
        alignItems: 'center',
    },
    borders: {
        borderBottomWidth: 0.7,
        borderBottomColor: "#E6E6E6",
    },
    icon_location: {
        width: '100%',
        height: '100%',
        justifyContent: 'center',
        alignItems:'center',
    },
    icon_locations: {
        width: "4%",
        height: '100%',
        alignSelf: 'flex-start',
        marginLeft: 10,
        justifyContent: 'center',
        alignItems:'center',
    },
    info: {
        width: "95%",
        height: 50,
        backgroundColor: '#ffffff',
    },
    nextBtn: {
        width: '100%',
        height: 50,
        backgroundColor: '#d23247',
        justifyContent: 'center',
        alignItems: 'center',
        zIndex: 11,
    },
    icon_right: {
        width: '5%',
        height: '100%',
        alignSelf: 'flex-end',
        position: 'absolute',
        justifyContent: 'center',
        alignItems:'flex-end',
        zIndex:222,
    },
    step: {
        width:"100%",
        height:170,
        marginTop: 75,
        alignItems: 'center',
        position:'absolute',
        zIndex:11,
        backgroundColor: "#ffffff",
    },
    stapbox: {
        width:"40%",
        height:"100%",
        justifyContent:'center',
        alignItems:'center',
        marginTop: 25,
    },
    inner: {
        width:"100%",
        height:"50%",
        alignSelf:'center',
        marginBottom:40
    },
    steptop: {
        width: "80%",
        height: "50%",
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'center'
    },
    step_left: {
        width:"15%",
        height:"70%",
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'flex-start',
        position:'absolute'
    },
    step_mid: {
        width:"50%",
        height:0.7,
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'center',
        borderBottomWidth:0.7,
        borderBottomColor:'#CCCCCC'
    },
    step_right: {
        width:"15%",
        height:"70%",
        justifyContent:'center',
        alignItems:'center',
        alignSelf:'flex-end',
        position:'absolute'
    },
    bot: {
        width: "100%",
        height: "50%",
        marginTop:5
    },
    step_text: {
        fontSize:14,
        fontWeight: 'normal',
        color:'#333333'
    }
});
