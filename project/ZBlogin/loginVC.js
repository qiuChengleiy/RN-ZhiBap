/**
 * Created by yangu on 2018/8/4.
 * generated by qiuchenglei on 2018/8/4
 * 密码登录组件
 */
import React, {Component} from 'react';
import {
    Platform, 
    StyleSheet, 
    Text, 
    View, 
    Image,
    KeyboardAvoidingView,
    TextInput,
    Alert,
    TouchableHighlight,
    Button,
    AsyncStorage,
    ScrollView,
    Dimensions,
} from 'react-native';

// 引入工具函数
import { phoneReg } from '../utils';

// 隐藏软键盘
const dismissKeyboard = require('dismissKeyboard');


const ScreenWidth = Dimensions.get('window').width;
const ScreenHeight = Dimensions.get('window').height;



const PassRem = AsyncStorage.getItem('isRemberPassWord');
// console.log(PassRem._55);
// 登录组件
export class LoginVC extends Component{

    static state = {
        behavior: 'padding',
      };
    

    constructor(props){
        super(props);
        this.state = {
            isText: false, // 用户输入状态
            isSelect: PassRem._55, //密码状态
            username: '',
            password: '',
            isPassword: true,
        }
    }

    // 图标切换
    toggleIcon(cls) {
        // 点击取消按钮时 收起软键盘并清除表单
        switch(cls) {
            case 'cancel':
                dismissKeyboard();
                this.setState({
                    isText: true,
                    username: false,
                });
              break;
            case 'isPassword':
                this.setState({
                    isPassword: !this.state.isPassword,
                });
              break;
            case 'rememberPassword':
                this.setState({
                    isSelect: !this.state.isSelect,
                },() => {
                    try {  
                           // 保存操作记录
                            AsyncStorage.setItem("isRemberPassWord", JSON.stringify(this.state.isSelect))
                            .then(() => {
                                const passwordRem = AsyncStorage.getItem("isRemberPassWord");
                                passwordRem.then((data) => console.log(data));
                            }) 
                    } catch(err) {
                        console.log(err);
                    }
                });
               
            default:
              break;
               
        }
        
    }

    // 密码管理
    passWordManager(option) {
        switch(option) {
            case '忘记密码':
                 this.props.navigation.navigate('BackPasswordVC');
              break;
            case '短信登录':
              this.props.navigation.navigate('MesLoginVC');
                break;
           case '注册':
                 this.props.navigation.navigate('RegisterVC');
                   break;
            default:
                break;
        }
    }

    // 登录跳转
    login(username,password) {
        dismissKeyboard(); 
        if(username && password ) {
            try {
                // 验证后台 验证手机格式
               // some api ...
             if(phoneReg(username)) {
                const User = {username,password,expires: new Date()};

                // 验证后台 用户名和密码


                // 记住密码
                if (this.state.isSelect) {
                    // 首次登录
                    AsyncStorage.setItem("User", JSON.stringify(User))
                    .then(() => {
                        const UserData = AsyncStorage.getItem("User");
                        UserData.then((data) => console.log(data));
                    //     Alert.alert('提示','登录成功',
                    //     [{text:"我知道了", onPress: this.refs.password.blur()}]
                    //   );

                      // 跳转
                        this.props.navigation.navigate('Home')
                    }) 
                }else {
                    // 直接登录
                    Alert.alert('直接登录')
                }
             }else {
                Alert.alert('错误','手机格式不正确',
                [{text:"我知道了", }]
              );
             }
              
            } catch(err) {
                console.log(err);
            }
          //  Alert.alert(username,password)
        }else {
            Alert.alert('请输入手机号码和密码')
        }
       
    }
   
    componentDidMount() {
        const User = AsyncStorage.getItem('User');
        const PassRem = AsyncStorage.getItem('isRemberPassWord');

        User.then((data) => {
            const username = JSON.parse(data).username;
            const password = JSON.parse(data).password;
            const expires = JSON.parse(data).expires;

            console.log(expires);
            
            // 用户是否选择记住密码 记住则自动登录 否则 自动填充账号
            PassRem.then((isSelect) => {
                console.log(isSelect)
                if(JSON.parse(isSelect)) {
                 //  Alert.alert('自动登录')
                    this.setState({isSelect})
                    // 直接走后台接口
                     //....
                      // 用户名和密码如果没找到 走登录接口  （本地数据可能被清除）

                      // 跳转
                      if(true) {
                       this.props.navigation.navigate('Home');
                      }
                      
                }else {
                    this.setState({username,password:''});
                }
            });
          
        })


        console.log(AsyncStorage.getItem('User'))
    }

    render() {
       
        return (
            <View style={[styles.container,this.state.isFocus ? {marginTop: -100} : '']}>

             {/* 头像 */}
              <View style={styles.logo}>
                <Image source={{uri:'logo'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
              </View>

             {/* 表单 */}
              <View style={styles.from}>
                 <View style={styles.main}>

                  {/* 用户名 */}
                    <View style={[styles.li,{}]}>
                       {/* 图标 */}
                        <View style={styles.icon_left}>
                             <Image source={{uri:'icon_phone'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                        </View>
                     {/* 键盘输入 随视图变化*/}
                       <View style={styles.containers}>
                         <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                            <TextInput
                                underlineColorAndroid={'#ffffff'}
                                placeholder="请输入手机号码"
                                style={styles.textInput} 
                                ref="username"
                             //获取焦点
                                 onFocus={() => this.setState({isFocus:true})}
                             // 失去焦点
                                onBlur={() => this.state.username ? this.setState({isFocus:true}) : this.setState({isFocus:false})}
                                value={ this.state.isText ? '' : this.state.username }
                                onChangeText={(username) =>  { this.setState({username,isText: false});username ? '' : dismissKeyboard()}}
                            // 限制只能输入数字
                                keyboardType='numeric'
                            />
                        </KeyboardAvoidingView>
                       </View>
                    {/* 图标切换 */}
                        <View style={styles.icon_right}>
                             <TouchableHighlight onPress={() => this.toggleIcon('cancel')} underlayColor="#ffffff">
                                <Image source={{uri:'icon_cancel'}} style={{width:'100%',height:"100%",resizeMode:'contain'}} />
                             </TouchableHighlight>
                        </View>
                    </View>

                    {/* 密码 */}
                    <View style={[styles.li,{marginTop:15}]}>
                        {/* 图标 */}
                        <View style={styles.icon_left}>
                             <Image source={{uri:'icon_lock'}} style={{width:'100%',height:"100%",resizeMode:'contain'}}/>
                        </View>
                     {/* 键盘输入 随视图变化*/}
                       <View style={styles.containers}>
                         <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                            <TextInput
                                underlineColorAndroid={'#ffffff'}
                                placeholder="请输入密码"
                                ref="password"
                                style={styles.textInput} 
                             // 获得焦点时 需要上移视图
                                onFocus={() => this.setState({isFocus:true})}
                             // 失去焦点
                                onBlur={() =>  this.setState({isFocus:false})}
                                onChangeText={(password) => {this.setState({password,isText: false});}}
                          //  密文形式
                                secureTextEntry={this.state.isPassword}  
                            />
                        </KeyboardAvoidingView>
                       </View>
                    {/* 图标切换 */}
                        <View style={styles.icon_right}>
                             <TouchableHighlight onPress={() => this.toggleIcon('isPassword')} underlayColor="#ffffff">
                                <Image source={{uri:'icon_1'}} style={{width:'100%',height:"100%",resizeMode:'contain'}} />
                             </TouchableHighlight>
                        </View>
                    </View>

                    {/* 密码选项 */}
                    <View style={[styles.li,{borderBottomWidth:0}]}>
                       <View style={{width:"100%",height:"50%",}}>
                         {/* 图标勾选 */}
                          <View style={{width:"5%",height:"60%",backgroundColor: '#e94d4d',marginTop:2}}>
                            <TouchableHighlight onPress={() => this.toggleIcon('rememberPassword')} underlayColor="#ffffff">
                                <Image source={this.state.isSelect ? {uri: 'icon_select'} :''} style={{width:'100%',height:"100%",resizeMode:'contain',alignSelf:'flex-start'}} />
                            </TouchableHighlight>
            
                          </View>
                          {/* 记住密码 */}
                          <View style={styles.text}>
                            <TouchableHighlight onPress={() => this.toggleIcon('rememberPassword')} underlayColor="#ffffff">
                                <Text style={{color:'#333333',}}>记住密码 <Text style={{color:'#cccccc'}}>|</Text></Text>
                            </TouchableHighlight>
            
                          </View>

                           {/* 忘记密码 */}
                           <View style={[styles.text,{width:"15%",marginLeft:'26%',zIndex:-999}]}>
                            <TouchableHighlight onPress={() => this.passWordManager('忘记密码')} underlayColor="#ffffff">
                                <Text style={{color:'#333333',}}>忘记密码</Text>
                            </TouchableHighlight>
            
                          </View>

                           {/* 短信登录 */}
                           <View style={[styles.text,{width:"17%",alignSelf:'flex-end',color:'#1e8ae5'}]}>
                            <TouchableHighlight onPress={() => this.passWordManager('短信登录')} underlayColor="#ffffff">
                                <Text style={{color:'#1e8ae5'}}>短信登录</Text>
                            </TouchableHighlight>
            
                          </View>

                       </View>
                    </View>

                {/* 登录按钮 */}
                    <View style={[styles.li,this.state.username && this.state.password ? {backgroundColor: '#d23247',borderRadius:25,marginTop:10,} : {backgroundColor: '#e6e6e6',borderRadius:25,marginTop:10,}]}>
                        <Button
                            onPress={ () => this.login(this.state.username,this.state.password)}
                            title="登录"
                            color= {this.state.username && this.state.password ? "#ffffff" : "#cfcfcf"}  
                            accessibilityLabel="Learn more about this purple button"
                        />
                    </View>

                    <View style={[styles.li,{alignItems:'flex-end',borderBottomWidth: 0,}]}>
                            <TouchableHighlight onPress={() => this.passWordManager('注册')} underlayColor="#ffffff">
                                 <Text style={{color:'#1e8ae5',fontSize:20,fontWeight:'600'}}>注册</Text>
                            </TouchableHighlight>
                    </View>
                 </View>
              </View>
            </View>
        );
    }
}




const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        backgroundColor: '#ffffff',
    },
    logo: {
        width:"100%",
        height:120,
        marginTop: 100,
        alignItems: 'center',
        color:'red',
    },
    from: {
        width: "100%",
        height: "30%",
        marginTop: 80,
        alignItems: 'center',
        justifyContent: 'center',
    },
    main: {
        width: "70%",
        height: "100%",
        alignItems: 'center',
    },
    li: {
        width: "100%",
        height: "20%",
        borderBottomWidth: 1,
        borderBottomColor: '#cccccc',
        justifyContent: 'center',
    },
    icon_left: {
        width: '10%',
        height: '60%',
    },
    icon_right: {
        width: '5%',
        height: '60%',
        alignSelf: 'flex-end',
        position: 'absolute'
    },
    containers: {
        width: '70%',
        height: '80%',
        justifyContent: 'center',
        position: 'absolute',
        marginLeft:'10%',
      },
    textInput: {
        height: '100%',
        fontSize: 14,
        marginLeft: 0,
        letterSpacing: 1,
      },
    text: {
        width:"23%",
        height:"80%",
        position:'absolute',
        marginLeft:'5%',
        justifyContent:'center',
        alignItems:'center',
        fontSize:10,
        fontWeight: 'normal',
    },
});
