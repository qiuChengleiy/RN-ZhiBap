/**
 * Created by yangu on 2018/8/4.
 * generated by qiuchenglei on 2018/8/7
 * 注册流程------ 普通用户 ------ 上传拍照头像
 */
import React, {Component} from 'react';
import {
    Platform,
    StyleSheet, 
    Text, 
    View, 
    Image,
    Alert,
    TouchableHighlight,
    Button,
    KeyboardAvoidingView,
    TextInput,
} from 'react-native';

// 隐藏软键盘
const dismissKeyboard = require('dismissKeyboard');

import { IDNUMBER, USERNAME, ImageUpload } from '../../utils';


export class RegUserInfoVC extends Component{

    constructor(props) {
        super(props);
        this.state = {
            username: '',
            nickName: '',
            IDnumber: '',
            imgUrl: 'icon_head',
            dataSource: null,
        }
    }

    // test 
    onFileUpload(dataSource) {

        // 打印 获取数据信息
        console.log(dataSource);
        return false;
    }

    
    // 头像上传
    upload() {
        if(this.state.dataSource) {
            // 上传
            let uploadURL = 'http://www.baidu.com';  // 要上传的 url 地址
            fetch(uploadURL,{
                method:'POST',
                headers:{
                    'Content-Type':'multipart/form-data',
                },
                body: JSON.stringify(this.state.dataSource),
            })
            // 异步处理
            .then((response) => response.text() )
            .then((responseData)=>{
                   console.log('responseData',responseData);
                })
                // 错误处理
            .catch((error)=>{console.log('error',error)});

        }else {
            Alert.alert('上传失败','图片发生错误',[{text:'我知道了'}]);
        }
    }


    //触发焦点
    regOption(option) {
        switch(option) {
            case 'nickName' :
               this.refs.nickName.focus();
                break;
            case 'username' :
                this.refs.username.focus();
                break;
            case 'IDnumber' :
                this.refs.IDnumber.focus();
                break;
            default:
                break;
        }
        
    }

    // 信息验证
    Reg(info,option) {
        if(info) {
            // 验证用户名
            if(option == 'username') {
                if(USERNAME(info)) {
                    return true;
                }else {
                    Alert.alert('姓名错误','请输入您的真实姓名',[{text:'我知道了',
                }])
                }
            // 验证身份证
            }else if(option == 'ID') {
                if(IDNUMBER(info)) {
                    return true;
                }else {
                    Alert.alert('身份证错误','请输入您的身份证号码',[{text:'我知道了',     
                }])
                }

            }else {
                return false;
            }
        }else {
            return false;
        }
    }

    // 下一步
    next(nickName,username,IDnumber) {

        if(nickName && username && IDnumber && this.state.dataSource) {
            // 用户名验证
            if(!USERNAME(username)) {
                // 身份证号验证
                if(!IDNUMBER(IDnumber)) {
                    //  当验证无误时 跳转导航并传递参数   昵称要做字符处理
                    // ......

                    const user_info = {
                        location: this.props.navigation.state.params.location,
                        ImageObj: this.state.dataSource,
                        userInfo: {
                            nickName,
                            username,
                            IDnumber,
                        }
                    }
                    this.props.navigation.navigate('RegisterIndexVC',{user_info})
                  //  console.log(this.state.dataSource,this.props.navigation.state)

                    // 图片上传 是否提前上传 还是导航传参
                  //  this.upload();
                    
                    return true;
                }else {
                    Alert.alert('身份证错误','请输入您的身份证号',[{text:'我知道了',onPress:
                     this.setState({IDnumber:''})
                }])                 
                }
  
            }else {
                Alert.alert('姓名错误','请输入您的真实姓名',[{text:'我知道了',
            }])   
            }

        }else {
            Alert.alert('空白','请输入信息',[{text:'我知道了',
           }])
        }
    }

    componentDidMount() {
        // ....some api here 
    }

    render() {
        return (
            <View style={styles.container}>
             
             {/* 标题 */}
             <View style={{ width:"100%",height:75,marginTop: 0,alignItems: 'center',borderBottomWidth:1,borderBottomColor:"#E6E6E6",position:'absolute',zIndex:11,backgroundColor: "#ffffff",}}></View>

                   {/* 头像上传 */}
                   <View style={{width:"100%",height:100,marginTop: 75,alignItems: 'center',borderBottomWidth:1,borderBottomColor:"#E6E6E6",position:'absolute',zIndex:11,backgroundColor: "#ffffff",}}>
                    <View style={{width:"95%",height:"100%"}}>
                      {/* 是否用户自己选择 */}
                        <TouchableHighlight underlayColor="#ffffff" style={styles.icon_location}>
                        <View style={{width:"100%",height:"100%"}}>
                           <View style={styles.icon_location}>
                                <Text style={{fontSize: 17,position:'absolute',alignSelf:'flex-start',color:'#333333',fontWeight:'400'}}>头像</Text>
                           </View>

                        {/* 请输入真实姓名 */}
                         <View style={[styles.head,]}>
                             <Image source={[{uri: this.state.imgUrl}]} style={[{width:70,height:70,resizeMode:'contain',},this.state.imgUrl !== 'icon_head' ? {borderRadius:35,backgroundColor: 'red',resizeMode:'cover'} : '']}/>
                              {/* 上传触控 */}
                              <ImageUpload
                                style={{width:'100%',height:"100%",position:'absolute',zIndex:2222}}
                                photos={[]}
                                ParentKey={this}
                                onFileUpload={this.onFileUpload} 
                              />

                          </View>

                          </View>
                        </TouchableHighlight>
                        </View>
                    </View>

                 {/* 警告提示 */}
                <View style={[styles.info,{height:40,position:'absolute',zIndex:11,backgroundColor: "#f7f7f7",marginTop:175,justifyContent:'center',alignItems:'center'}]}>
                    <Text style={[{color:"#D23247",fontSize:12,fontWeight:'400'}]}>请上传您本人头像，该头像将作为您的唯一头像，请慎重选择</Text>
                </View>


                {/* 表单 */}
                <View style={{width:"100%",height:150,backgroundColor:"#ffffff",justifyContent:"center",alignItems:"center",position:'absolute',zIndex:111,marginTop:215,}}>

                     {/* 昵称 */}
                    <View style={[styles.info,styles.borders]}>

                      {/* 是否用户自己选择 */}
                        <TouchableHighlight onPress={() => this.regOption('nickName')} underlayColor="#ffffff" style={styles.icon_location}>
                        <View style={{width:"100%",height:"100%"}}>
                           <View style={styles.icon_location}>
                                <Text style={{fontSize: 17,position:'absolute',alignSelf:'flex-start',color:'#333333',fontWeight:'400'}}>昵称</Text>
                           </View>
            
                        {/* 请输入昵称 */}
                         <View style={styles.containers}>
                            <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="请输入昵称"
                                    style={{alignSelf:'flex-end',fontSize:17,}} 
                                    ref="nickName"
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                                //    onBlur={() =>Reg()}
                                    onChangeText={(nickName) => { this.setState({nickName,});nickName ? '' : dismissKeyboard()}}
                                // 限制只能输入数字
                                  //  keyboardType='numeric'
                                />
                             </KeyboardAvoidingView>
                            </View>
                          </View>
                        </TouchableHighlight>
                    </View>

                     {/* 姓名 */}
                    <View style={[styles.info,styles.borders]}>
                      {/* 是否用户自己选择 */}
                        <TouchableHighlight onPress={() => this.regOption('username')} underlayColor="#ffffff" style={styles.icon_location}>
                        <View style={{width:"100%",height:"100%"}}>
                           <View style={styles.icon_location}>
                                <Text style={{fontSize: 17,position:'absolute',alignSelf:'flex-start',color:'#333333',fontWeight:'400'}}>填写您的真实姓名</Text>
                           </View>

                        {/* 请输入真实姓名 */}
                         <View style={styles.containers}>
                            <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="真实姓名"
                                    style={{alignSelf:'flex-end',fontSize:17,}} 
                                    ref="username"
                                    maxLength={4}
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                               //    onBlur={() => this.state.username ? this.Reg(this.state.username,'username') : ''}
                                    onChangeText={(username) => { this.setState({username,});username ? '' : dismissKeyboard()}}
                                // 限制只能输入数字
                                  //  keyboardType='numeric'
                                />
                            </KeyboardAvoidingView>
                          </View>

                          </View>
                        </TouchableHighlight>
                    </View>


                    {/* 身份证号 */}
                    <View style={[styles.info,styles.borders]}>
                      {/* 是否用户自己选择 */}
                        <TouchableHighlight onPress={() => this.regOption('IDnumber')} underlayColor="#ffffff" style={styles.icon_location}>
                        <View style={{width:"100%",height:"100%"}}>
                           <View style={styles.icon_location}>
                                <Text style={{fontSize: 17,position:'absolute',alignSelf:'flex-start',color:'#333333',fontWeight:'400'}}>填写您的身份证号</Text>
                           </View>

                        {/* 请输入身份证号 */}
                         <View style={styles.containers}>
                            <KeyboardAvoidingView behavior="padding" style={styles.containers}>
                                <TextInput
                                    underlineColorAndroid={'#ffffff'}
                                    placeholder="身份证号"
                                    style={{alignSelf:'flex-end',fontSize:17}} 
                                    ref="IDnumber"
                                    value={this.state.IDnumber}
                                //获取焦点
                                //    onFocus={() => this.setState({isFocus:true})}
                                // 失去焦点
                                //    onBlur={() => this.Reg(this.state.IDnumber,'ID')}
                                    onChangeText={(IDnumber) => { this.setState({IDnumber,});IDnumber ? '' : dismissKeyboard()}}
                                // 限制只能输入数字
                                  //  keyboardType='numeric'
                                />
                            </KeyboardAvoidingView>
                          </View>
                        </View>
                        </TouchableHighlight>
                    </View>

                 </View>


             {/* next */}
                <View style={styles.btn}>
    
                    <View style={styles.nextBtn}>
                        <TouchableHighlight onPress={() => this.next(this.state.nickName,this.state.username,this.state.IDnumber)} underlayColor="##d23247" style={{width:'100%',height:'100%',justifyContent: 'center',alignItems: 'center',}}>
                            <Text style={{fontSize:16,fontWeight: '800',color:'#ffffff'}}>下一步</Text>
                        </TouchableHighlight>
                    </View>

                
                </View>
            
        
            </View>
        );
    }
}



// const Tab=createBottomTabNavigator(
//     {


//     })



const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        backgroundColor: '#ffffff',
    },
    containers: {
        width: '80%',
        height: '100%',
        justifyContent: 'center',
        alignItems: 'center',
        position: 'absolute',
        marginLeft:'10%',
        alignSelf:"flex-end",
    },
    head: {
        width: '15%',
        height: '100%',
        justifyContent: 'center',
        alignItems: 'center',
        position: 'absolute',
        marginLeft:'10%',
        alignSelf: 'flex-end',
    },
    nav: {    
        width:'100%',
        height:25,
        marginTop: 30,
        position: 'absolute',
        zIndex: 11,
    },
    nav_icon: {
        width: '15%',
        height:'100%',
        alignSelf: 'flex-start',
    },
    btn: {
        width: '100%',
        height: '100%',
        backgroundColor: '#f7f7f7',
        justifyContent: 'flex-end',
        alignItems: 'center',
    },
    borders: {
        borderBottomWidth: 0.7,
        borderBottomColor: "#E6E6E6",
    },
    icon_location: {
        width: '100%',
        height: '100%',
        justifyContent: 'center',
        alignItems:'center',
    },
    icon_locations: {
        width: "4%",
        height: '50%',
        alignSelf: 'flex-start',
        marginLeft: 10,
    },
    info: {
        width: "95%",
        height: 50,
        backgroundColor: '#ffffff',
    },
    nextBtn: {
        width: '100%',
        height: 50,
        backgroundColor: '#d23247',
        justifyContent: 'center',
        alignItems: 'center',
        zIndex: 11,
    }
});
